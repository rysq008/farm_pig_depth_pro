package com.xiangchuang.risks.utils;

import java.util.HashMap;
import java.util.Map;

public class PigWeightUtils {

	private static Map<Integer, Float> WEIGHT_MAP = null;
	private static int MAX_FEED_DAYS = 226;
	
	private static Map<Integer, Float> getWeightMap(){
		if(WEIGHT_MAP != null)	return WEIGHT_MAP;
		WEIGHT_MAP = new HashMap<Integer, Float>();
		WEIGHT_MAP.put(1, 7f);
		WEIGHT_MAP.put(2, 7.12f);
		WEIGHT_MAP.put(3, 7.32f);
		WEIGHT_MAP.put(4, 7.56f);
		WEIGHT_MAP.put(5, 7.86f);
		WEIGHT_MAP.put(6, 8.15f);
		WEIGHT_MAP.put(7, 8.46f);
		WEIGHT_MAP.put(8, 8.77f);
		WEIGHT_MAP.put(9, 9.09f);
		WEIGHT_MAP.put(10, 9.41f);
		WEIGHT_MAP.put(11, 9.74f);
		WEIGHT_MAP.put(12, 10.08f);
		WEIGHT_MAP.put(13, 10.42f);
		WEIGHT_MAP.put(14, 10.77f);
		WEIGHT_MAP.put(15, 11.13f);
		WEIGHT_MAP.put(16, 11.5f);
		WEIGHT_MAP.put(17, 11.87f);
		WEIGHT_MAP.put(18, 12.24f);
		WEIGHT_MAP.put(19, 12.63f);
		WEIGHT_MAP.put(20, 13.02f);
		WEIGHT_MAP.put(21, 13.42f);
		WEIGHT_MAP.put(22, 13.82f);
		WEIGHT_MAP.put(23, 14.23f);
		WEIGHT_MAP.put(24, 14.65f);
		WEIGHT_MAP.put(25, 15.08f);
		WEIGHT_MAP.put(26, 15.51f);
		WEIGHT_MAP.put(27, 15.95f);
		WEIGHT_MAP.put(28, 16.39f);
		WEIGHT_MAP.put(29, 16.85f);
		WEIGHT_MAP.put(30, 17.31f);
		WEIGHT_MAP.put(31, 17.78f);
		WEIGHT_MAP.put(32, 18.25f);
		WEIGHT_MAP.put(33, 18.73f);
		WEIGHT_MAP.put(34, 19.22f);
		WEIGHT_MAP.put(35, 19.72f);
		WEIGHT_MAP.put(36, 20.22f);
		WEIGHT_MAP.put(37, 20.73f);
		WEIGHT_MAP.put(38, 21.25f);
		WEIGHT_MAP.put(39, 21.77f);
		WEIGHT_MAP.put(40, 22.3f);
		WEIGHT_MAP.put(41, 22.84f);
		WEIGHT_MAP.put(42, 23.39f);
		WEIGHT_MAP.put(43, 23.94f);
		WEIGHT_MAP.put(44, 24.5f);
		WEIGHT_MAP.put(45, 25.07f);
		WEIGHT_MAP.put(46, 25.64f);
		WEIGHT_MAP.put(47, 26.22f);
		WEIGHT_MAP.put(48, 26.8f);
		WEIGHT_MAP.put(49, 27.39f);
		WEIGHT_MAP.put(50, 27.98f);
		WEIGHT_MAP.put(51, 28.58f);
		WEIGHT_MAP.put(52, 29.19f);
		WEIGHT_MAP.put(53, 29.8f);
		WEIGHT_MAP.put(54, 30.42f);
		WEIGHT_MAP.put(55, 31.05f);
		WEIGHT_MAP.put(56, 31.68f);
		WEIGHT_MAP.put(57, 32.31f);
		WEIGHT_MAP.put(58, 32.96f);
		WEIGHT_MAP.put(59, 33.6f);
		WEIGHT_MAP.put(60, 34.26f);
		WEIGHT_MAP.put(61, 34.92f);
		WEIGHT_MAP.put(62, 35.58f);
		WEIGHT_MAP.put(63, 36.25f);
		WEIGHT_MAP.put(64, 36.92f);
		WEIGHT_MAP.put(65, 37.61f);
		WEIGHT_MAP.put(66, 38.29f);
		WEIGHT_MAP.put(67, 38.98f);
		WEIGHT_MAP.put(68, 39.68f);
		WEIGHT_MAP.put(69, 40.38f);
		WEIGHT_MAP.put(70, 41.09f);
		WEIGHT_MAP.put(71, 41.8f);
		WEIGHT_MAP.put(72, 42.52f);
		WEIGHT_MAP.put(73, 43.24f);
		WEIGHT_MAP.put(74, 43.97f);
		WEIGHT_MAP.put(75, 44.7f);
		WEIGHT_MAP.put(76, 45.44f);
		WEIGHT_MAP.put(77, 46.18f);
		WEIGHT_MAP.put(78, 46.92f);
		WEIGHT_MAP.put(79, 47.68f);
		WEIGHT_MAP.put(80, 48.43f);
		WEIGHT_MAP.put(81, 49.19f);
		WEIGHT_MAP.put(82, 49.96f);
		WEIGHT_MAP.put(83, 50.73f);
		WEIGHT_MAP.put(84, 51.5f);
		WEIGHT_MAP.put(85, 52.28f);
		WEIGHT_MAP.put(86, 53.06f);
		WEIGHT_MAP.put(87, 53.85f);
		WEIGHT_MAP.put(88, 54.64f);
		WEIGHT_MAP.put(89, 55.44f);
		WEIGHT_MAP.put(90, 56.24f);
		WEIGHT_MAP.put(91, 57.04f);
		WEIGHT_MAP.put(92, 57.85f);
		WEIGHT_MAP.put(93, 58.66f);
		WEIGHT_MAP.put(94, 59.47f);
		WEIGHT_MAP.put(95, 60.29f);
		WEIGHT_MAP.put(96, 61.11f);
		WEIGHT_MAP.put(97, 61.94f);
		WEIGHT_MAP.put(98, 62.77f);
		WEIGHT_MAP.put(99, 63.6f);
		WEIGHT_MAP.put(100, 64.43f);
		WEIGHT_MAP.put(101, 65.27f);
		WEIGHT_MAP.put(102, 66.11f);
		WEIGHT_MAP.put(103, 66.96f);
		WEIGHT_MAP.put(104, 67.81f);
		WEIGHT_MAP.put(105, 68.66f);
		WEIGHT_MAP.put(106, 69.51f);
		WEIGHT_MAP.put(107, 70.37f);
		WEIGHT_MAP.put(108, 71.23f);
		WEIGHT_MAP.put(109, 72.09f);
		WEIGHT_MAP.put(110, 72.95f);
		WEIGHT_MAP.put(111, 73.82f);
		WEIGHT_MAP.put(112, 74.69f);
		WEIGHT_MAP.put(113, 75.56f);
		WEIGHT_MAP.put(114, 76.43f);
		WEIGHT_MAP.put(115, 77.31f);
		WEIGHT_MAP.put(116, 78.18f);
		WEIGHT_MAP.put(117, 79.06f);
		WEIGHT_MAP.put(118, 79.94f);
		WEIGHT_MAP.put(119, 80.82f);
		WEIGHT_MAP.put(120, 81.71f);
		WEIGHT_MAP.put(121, 82.59f);
		WEIGHT_MAP.put(122, 83.48f);
		WEIGHT_MAP.put(123, 84.37f);
		WEIGHT_MAP.put(124, 85.26f);
		WEIGHT_MAP.put(125, 86.15f);
		WEIGHT_MAP.put(126, 87.04f);
		WEIGHT_MAP.put(127, 87.93f);
		WEIGHT_MAP.put(128, 88.82f);
		WEIGHT_MAP.put(129, 89.71f);
		WEIGHT_MAP.put(130, 90.61f);
		WEIGHT_MAP.put(131, 91.5f);
		WEIGHT_MAP.put(132, 92.39f);
		WEIGHT_MAP.put(133, 93.29f);
		WEIGHT_MAP.put(134, 94.18f);
		WEIGHT_MAP.put(135, 95.07f);
		WEIGHT_MAP.put(136, 95.97f);
		WEIGHT_MAP.put(137, 96.86f);
		WEIGHT_MAP.put(138, 97.75f);
		WEIGHT_MAP.put(139, 98.65f);
		WEIGHT_MAP.put(140, 99.54f);
		WEIGHT_MAP.put(141, 100.43f);
		WEIGHT_MAP.put(142, 101.32f);
		WEIGHT_MAP.put(143, 102.21f);
		WEIGHT_MAP.put(144, 103.1f);
		WEIGHT_MAP.put(145, 103.98f);
		WEIGHT_MAP.put(146, 104.87f);
		WEIGHT_MAP.put(147, 105.75f);
		WEIGHT_MAP.put(148, 106.63f);
		WEIGHT_MAP.put(149, 107.51f);
		WEIGHT_MAP.put(150, 108.39f);
		WEIGHT_MAP.put(151, 109.27f);
		WEIGHT_MAP.put(152, 110.14f);
		WEIGHT_MAP.put(153, 111.01f);
		WEIGHT_MAP.put(154, 111.88f);
		WEIGHT_MAP.put(155, 112.75f);
		WEIGHT_MAP.put(156, 113.61f);
		WEIGHT_MAP.put(157, 114.48f);
		WEIGHT_MAP.put(158, 115.33f);
		WEIGHT_MAP.put(159, 116.19f);
		WEIGHT_MAP.put(160, 117.04f);
		WEIGHT_MAP.put(161, 117.89f);
		WEIGHT_MAP.put(162, 118.73f);
		WEIGHT_MAP.put(163, 119.57f);
		WEIGHT_MAP.put(164, 120.41f);
		WEIGHT_MAP.put(165, 121.25f);
		WEIGHT_MAP.put(166, 122.07f);
		WEIGHT_MAP.put(167, 122.9f);
		WEIGHT_MAP.put(168, 123.72f);
		WEIGHT_MAP.put(169, 124.54f);
		WEIGHT_MAP.put(170, 125.35f);
		WEIGHT_MAP.put(171, 126.15f);
		WEIGHT_MAP.put(172, 126.96f);
		WEIGHT_MAP.put(173, 127.75f);
		WEIGHT_MAP.put(174, 128.54f);
		WEIGHT_MAP.put(175, 129.33f);
		WEIGHT_MAP.put(176, 130.11f);
		WEIGHT_MAP.put(177, 130.88f);
		WEIGHT_MAP.put(178, 131.65f);
		WEIGHT_MAP.put(179, 132.41f);
		WEIGHT_MAP.put(180, 133.17f);
		WEIGHT_MAP.put(181, 133.92f);
		WEIGHT_MAP.put(182, 134.66f);
		WEIGHT_MAP.put(183, 135.4f);
		WEIGHT_MAP.put(184, 136.13f);
		WEIGHT_MAP.put(185, 136.85f);
		WEIGHT_MAP.put(186, 137.56f);
		WEIGHT_MAP.put(187, 138.26f);
		WEIGHT_MAP.put(188, 138.96f);
		WEIGHT_MAP.put(189, 139.64f);
		WEIGHT_MAP.put(190, 140.32f);
		WEIGHT_MAP.put(191, 140.99f);
		WEIGHT_MAP.put(192, 141.66f);
		WEIGHT_MAP.put(193, 142.32f);
		WEIGHT_MAP.put(194, 142.97f);
		WEIGHT_MAP.put(195, 143.61f);
		WEIGHT_MAP.put(196, 144.25f);
		WEIGHT_MAP.put(197, 144.88f);
		WEIGHT_MAP.put(198, 145.5f);
		WEIGHT_MAP.put(199, 146.12f);
		WEIGHT_MAP.put(200, 146.73f);
		WEIGHT_MAP.put(201, 147.33f);
		WEIGHT_MAP.put(202, 147.93f);
		WEIGHT_MAP.put(203, 148.52f);
		WEIGHT_MAP.put(204, 149.1f);
		WEIGHT_MAP.put(205, 149.67f);
		WEIGHT_MAP.put(206, 150.24f);
		WEIGHT_MAP.put(207, 150.8f);
		WEIGHT_MAP.put(208, 151.35f);
		WEIGHT_MAP.put(209, 151.9f);
		WEIGHT_MAP.put(210, 152.44f);
		WEIGHT_MAP.put(211, 152.97f);
		WEIGHT_MAP.put(212, 153.5f);
		WEIGHT_MAP.put(213, 154.02f);
		WEIGHT_MAP.put(214, 154.53f);
		WEIGHT_MAP.put(215, 155.03f);
		WEIGHT_MAP.put(216, 155.53f);
		WEIGHT_MAP.put(217, 156.02f);
		WEIGHT_MAP.put(218, 156.5f);
		WEIGHT_MAP.put(219, 156.98f);
		WEIGHT_MAP.put(220, 157.45f);
		WEIGHT_MAP.put(221, 157.91f);
		WEIGHT_MAP.put(222, 158.37f);
		WEIGHT_MAP.put(223, 158.81f);
		WEIGHT_MAP.put(224, 159.25f);
		WEIGHT_MAP.put(225, 159.65f);
		WEIGHT_MAP.put(226, 160.12f);
		return WEIGHT_MAP;

	}
	
	private static float calcWeightByDays(int feedDays) {
		return (getWeightMap().containsKey(feedDays)) ? getWeightMap().get(feedDays) : getWeightMap().get(MAX_FEED_DAYS);
	}

	/**
	 * 	死猪重量校正
	 * */
	public static float correctWeight(int feedDays, float autoWeight) {
		float monthWeight = calcWeightByDays(feedDays);
		if(autoWeight == 0f) return monthWeight;
		if(feedDays > MAX_FEED_DAYS + 10)	return autoWeight;
		if(autoWeight / monthWeight > 1.2f) return monthWeight * 1.1f;
		if(monthWeight / autoWeight > 1.2f) return monthWeight * 0.9f;
		return autoWeight;		
	}
}
