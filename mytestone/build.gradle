apply plugin: 'com.android.application'
//apply plugin: 'com.android.library'

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "andbase.com.mytestone"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        ndk {
            abiFilters /*"armeabi", "armeabi-v7a", "x86", "mips"*/ "armeabi-v7a"
        }
    }
    aaptOptions { noCompress 'tflite' }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    configurations {
        all*.exclude group: 'org.tensorflow.lite'
    }

}
configurations.all {
    resolutionStrategy {
        force 'com.squareup.okhttp3:okhttp:3.11.0'
        force 'com.squareup.okio:okio:1.14.0'
        force 'com.android.support.constraint:constraint-layout:1.1.1'
        force 'com.google.code.gson:gson:2.8.5'
        force 'com.android.support:appcompat-v7:27.1.1'
        force 'com.android.support:support-annotations:27.1.1'
        force 'com.android.support:support-compat:27.1.1'
        force 'com.android.support:support-v4:27.1.1'
        force 'com.android.support:recyclerview-v7:27.1.1'
        force 'com.google.code.findbugs:jsr305:3.0.2'
        force 'com.amap.api:3dmap:latest.integration'
        force 'com.amap.api:location:latest.integration'
        force 'com.amap.api:search:latest.integration'
        force 'com.squareup.okhttp3:logging-interceptor:3.8.1'
        force 'io.reactivex.rxjava2:rxjava:2.2.6'
        force 'com.android.support:multidex:1.0.3'
    }
}
configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
    }
}
//configurations {
//    all*.exclude group: 'com.google.android', module: 'support-v4'
//    //或者粗暴点，就没有上面的坑了  all*.exclude module: 'support-v4'
//}
//configurations.all {
////    resolutionStrategy {
////        failOnVersionConflict()
////    }
//    resolutionStrategy {
//        // fail eagerly on version conflict (includes transitive dependencies)
//        // e.g. multiple different versions of the same dependency (group and name are equal)
//        failOnVersionConflict()
//
////        // prefer modules that are part of this build (multi-project or composite build) over external modules
////        preferProjectModules()
//
////        // force certain versions of dependencies (including transitive)
////        //  *append new forced modules:
////        force 'asm:asm-all:3.3.1', 'commons-io:commons-io:1.4'
////        //  *replace existing forced modules with new ones:
////        forcedModules = ['asm:asm-all:3.3.1']
////
////        // add dependency substitution rules
////        dependencySubstitution {
////            substitute module('org.gradle:api') with project(':api')
////            substitute project(':util') with module('org.gradle:util:3.0')
////        }
//
////        // cache dynamic versions for 10 minutes
////        cacheDynamicVersionsFor 10*60, 'seconds'
////        // don't cache changing modules at all
////        cacheChangingModulesFor 0, 'seconds'
//    }
//}
//configurations.all() {
//    configuration ->
//        configuration.resolutionStrategy.force(['com.squareup.okhttp3:okhttp:3.11.0',
//                                                'com.squareup.okio:okio:1.14.0',
//                        'com.android.support.constraint:constraint-layout:1.1.1'])
//
////        //或者这样写
////        resolutionStrategy.setForcedModules(['org.slf4j:slf4j-api:1.6.1'])
//}
//configurations.all() {
//    configuration ->
//        //当遇到版本冲突时直接构建失败
//        configuration.resolutionStrategy.failOnVersionConflict()
//}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:multidex:1.0.1'
//    implementation('com.innovation.ai:farmer_depth_pro:1.133')
//            {transitive = true}
//    implementation('com.innovation.ai:farm_pig_depth_pro:1.9.9')
//            {transitive = true}
    implementation project(':app')
//    implementation 'com.github.rysq008:farm_pig_depth_pro:v1.9.95'
    implementation 'com.github.rysq008:weight_aar:1.0'

//    implementation 'com.gitee.rysq008:farm_pig_depth_pro:v1.6'
//    implementation('com.innovation.aar:farmer_depth_pro:1.118'){transitive = true}
//    implementation ('com.innovation.ai:farmer_pig_aar:1.113'){transitive =true }
//    implementation('com.innovation.aar:farmer_pig_Insurance:1.118')
//            { transitive = true }
//    implementation('com.innovationai.pigweight:pig_insurance_weight:1.0.8') { transitive = true }
//    implementation('com.innovationai.pigweight:pig_insurance_weight:1.1.6')
    // { transitive = true }
    implementation 'com.github.bumptech.glide:glide:4.2.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.2.0'

}
//apply plugin: 'io.objectbox'
